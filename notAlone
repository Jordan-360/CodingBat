Array-2 : notAlone

We'll say that an element in an array is "alone" if there are values before and after it, and those values are different from it. 
Return a version of the given array where every instance of the given value which is alone is replaced by whichever value to its left or right is larger.


notAlone([1, 2, 3], 2) → [1, 3, 3]
notAlone([1, 2, 3, 2, 5, 2], 2) → [1, 3, 3, 5, 5, 2]
notAlone([3, 4], 3) → [3, 4]

public int[] notAlone(int[] nums, int val) {
  if (nums.length < 3) {
            return nums;
        }
        int index;
        for(int i = 0; i < nums.length - 1; i++) {
            if (nums[i] == val) {
                index = i;
                if(index == 0) {
                    index++;
                }
                if (Math.abs(nums[index - 1] - nums[index]) >= 1 && Math.abs(nums[index] - nums[index + 1]) >= 1) {
                    int max1 = Math.max(nums[index - 1], nums[index]);
                    int max2 = Math.max(nums[index], nums[index + 1]);
                    nums[index] = Math.max(max1, max2);

                }
            }
        }
        return nums;
}
